% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_steps.R
\name{PartitionMCMC}
\alias{PartitionMCMC}
\title{Transition objects.
A one step implementation of partition MCMC. This acts as a constructor.}
\usage{
PartitionMCMC(proposal = NULL, verbose = TRUE)
}
\arguments{
\item{proposal}{Proposal function. Default is the DefaultProposal.}

\item{verbose}{Flag to pass mcmc information.}
}
\value{
Function that takes the current state and scorer that outputs a new
state.
}
\description{
This is a constructor for a single Partition MCMC step. The function
constructs an environment with the proposal and verbose flag. It then returns
a function which takes the current_state and a scorer object.
}
\examples{
dag <- UniformlySampleDAG(c('A', 'B', 'C', 'D', 'E', 'F'))
partitioned_nodes <- GetPartitionedNodesFromAdjacencyMatrix(dag)

scorer <- list(
  scorer = BNLearnScorer,
  parameters = list(data = bnlearn::learning.test)
  )

current_state <- list(
  state = partitioned_nodes,
  log_score = ScoreLabelledPartition(partitioned_nodes, scorer)
  )

pmcmc <- PartitionMCMC(proposal = PartitionSplitJoin)
pmcmc(current_state, scorer)

}
