[{"path":"https://spaceodyssey.github.io/cia/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cia authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"what-is-this-for","dir":"Articles","previous_headings":"","what":"What is this for?","title":"An Example of using the Causal Inference Assistant (CIA)","text":"shows basic usage Causal Inference Assistant (cia) simple three node problem, can calculate probabilities DAG analytically.","code":""},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"causal-structure-learning","dir":"Articles","previous_headings":"","what":"Causal structure learning","title":"An Example of using the Causal Inference Assistant (CIA)","text":"Create conditional probability tables true DAG. draws samples DAG AA CC common cause BB, given ←B→CA \\leftarrow B \\rightarrow C. Let’s calculate correlation matrix get idea marginal dependencies data. suggests (AA, BB, CC) marginally dependent expect DAG studying.","code":"library(cia) set.seed(1) n <- 100 b <- rbinom(n, 1, 0.5)  c <- as.vector(n, 'numeric') n_b <- sum(b == 1) c[b == 1] <- rbinom(n_b, 1, 0.33) c[b == 0] <- rbinom(n - n_b, 1, 0.9)   a <- as.vector(n, 'numeric') a[b == 1] <- rbinom(n_b, 1, 0.67) a[b == 0] <- rbinom(n - n_b, 1, 0.33)  a <- ifelse(a == 1, 'yes', 'no') b <- ifelse(b == 1, 'yes', 'no') c <- ifelse(c == 1, 'yes', 'no')  dat <- data.frame(A = as.factor(a), B = as.factor(b), C = as.factor(c)) knitr::kable(head(dat)) knitr::kable(cor(dat == 'yes'))"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"calculate-analytical-probabilities-for-each-graph","dir":"Articles","previous_headings":"Causal structure learning","what":"Calculate analytical probabilities for each graph","title":"An Example of using the Causal Inference Assistant (CIA)","text":"Get possible graphs. Score possible DAGs simulated data. Convert scores expected probabilities.","code":"GetAllDAGs <- function(nodes) {    n <- length(nodes)   n_tri <- n*(n - 1)/2   tri_comb <- rep(list(c(0L, 1L)), n_tri)   tri_val <- expand.grid(tri_comb)      node_perm <- gtools::permutations(length(nodes), length(nodes), nodes)   all_dags <- list()   n <- 1   for (i in 1:nrow(node_perm)) {     for (j in 1:nrow(tri_val)) {       mat <- matrix(         0L,         nrow = length(nodes),          ncol = length(nodes),         dimnames = list(node_perm[i, ], node_perm[i, ])         )       mat[upper.tri(mat)] <- as.integer(tri_val[j, ])       mat <- mat[nodes, nodes]              all_dags[[n]] <- mat       n <- n + 1     }   }   all_dags <- unique(all_dags)      return(all_dags) }  nodes <- colnames(dat) all_dags <- GetAllDAGs(nodes) scorer <- CreateScorer(data = dat, type = 'bde', cache = TRUE)  score_all_dags <- all_dags |>   lapply(ScoreDAG, scorer = scorer) |>   unlist() hash_all_dags <- all_dags |>   lapply(rlang::hash) |>    unlist() x_max <- max(score_all_dags) log_z <- x_max + log(sum(exp(score_all_dags - x_max))) log_p <- score_all_dags - log_z p_true <- exp(log_p)  p_summary <- data.frame(   hash_dag = hash_all_dags,    p_true = p_true )"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"sample-from-the-posterior-using-mcmc","dir":"Articles","previous_headings":"Causal structure learning","what":"Sample from the posterior using MCMC","title":"An Example of using the Causal Inference Assistant (CIA)","text":"Let’s sample posterior using cia implementation partition MCMC (Kuipers & Moffa, 2017). sample two chains, can compare chain convergence estimated quantities. Typically, suggest running four chains default (Vehtari et al., 2021).","code":"set.seed(1) n_results <- 20000 n_chains <- 2  init_partitions <- list() for (i in 1:n_chains) {   init_dag <- UniformlySampleDAG(nodes)   init_partitions[[i]] <- DAGtoPartition(init_dag) } #> Loading required namespace: igraph  # Only use the move-node proposal. There are some minor issues with following  # detailed balance by using the others. chains <- SampleChains(n_results,                        init_partitions,                        transition = PartitionMCMC(                          proposal = DefaultProposal(p = c(0.0, 1.0, 0.0, 0.0, 0.0))                          ),                        scorer = scorer,                        n_parallel_chains = n_chains)"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"analysing-the-mcmc-chains-","dir":"Articles","previous_headings":"Causal structure learning","what":"Analysing the MCMC chains.","title":"An Example of using the Causal Inference Assistant (CIA)","text":"good way start analysis chains understand ’s dependency initial starting value. can done graphically plotting score across chains often referred score trace.  graph suggests PMCMC spends number steps start chains converge stable point. called burnin removed. remove 500 steps burnin plot trace .","code":"PlotScoreTrace(chains, ylab = 'log(partition score)', type = 'l') n_burnin <- 500 eq_chains <- chains[(1 + n_burnin):n_results] PlotScoreTrace(eq_chains, ylab = 'log(partition score)', type = 'l')"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"qualitatively-check-the-dag-score-chains-for-convergence","dir":"Articles","previous_headings":"Causal structure learning","what":"Qualitatively check the DAG score chains for convergence","title":"An Example of using the Causal Inference Assistant (CIA)","text":"suggests chains converged respect partition score. However, want study DAGs, let’s convert partitions DAGs see DAG score converged. Plot trace DAG scores equilibrium states.","code":"eq_dag_chains <- PartitiontoDAG(eq_chains, scorer) PlotScoreTrace(eq_dag_chains, attribute = 'log_score', ylab = 'log(DAG score)', type = 'l')"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"convergence-of-the-score-trace","dir":"Articles","previous_headings":"Causal structure learning","what":"Convergence of the score trace","title":"An Example of using the Causal Inference Assistant (CIA)","text":"inspection score trace partitions DAGs appears converged across chains. can also use quantitative measures, Split R-hat convergence statistic effective sample size S_eff (Gelman et al., 2013; Vehtari et al., 2021). can log-score partitions: can also performed log DAG scores. Split R-hat statistic provides measure convergence chains (Gelman et al., 2013). R-hat values closer 1 considered greater evidence convergence, latest recommendations suggesting aim R-hat < 1.01 (Vehtari et al., 2021). R_hat relied upon total effective sample size across chains S_eff > 400 average effective sample size per chain N_eff > 100. can think effective sample size approximate number independent samples posterior predictive distribution. ’re just reporting mean /standard deviation parameter, Vehtari et al. (2021) suggest total effective sample size greater 400. want report quantiles (e.g., 95% credible intervals) effective sample size may need order thousands samples constrain tail distribution (e.g., Kruschke, 2021). caveat , note recommendations adapted applications MCMCs, typically estimating parameters continuous variables. research needs undertaken sure applies sampling DAGs derived quantities.","code":"knitr::kable(summary(eq_chains)[[3]]$stats) knitr::kable(summary(eq_dag_chains)[[3]]$stats)"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"analysing-acceptance-rates","dir":"Articles","previous_headings":"Causal structure learning","what":"Analysing acceptance rates","title":"An Example of using the Causal Inference Assistant (CIA)","text":"’s often good idea check proposal acceptance rates. problems MCMC applied acceptance rates region 0.1 0.5. calculate acceptance rates per chain, fortunately acceptance rates consistent typical MCMC ranges case. note experience PMCMC acceptance rates can low. something needs investigated. cases, important ensure PMCMC capable walking local maxima. One way check chains starting different locations converge distribution.","code":"total_accept <- CalculateAcceptanceRates(eq_chains, group_by = 'chain') knitr::kable(total_accept)"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"estimating-probabilities-for-each-dag","dir":"Articles","previous_headings":"Causal structure learning","what":"Estimating probabilities for each DAG","title":"An Example of using the Causal Inference Assistant (CIA)","text":"shows comparison estimated (p_est) true (p_true) posterior probabilities top five DAGs visited sampling procedure. sampling procedure worked well, two values approximately equal. experiments suggest cia implementation PMCMC gets within percent true posterior probability true DAG problem.","code":"flat_eq_chains <- FlattenChains(eq_dag_chains) collect_dags <- CollectUniqueObjects(flat_eq_chains) p_ordered_dags <- sort(collect_dags$log_sampling_prob,                        decreasing = TRUE,                        index.return = TRUE)  for (i in 1:5) {   adj <- collect_dags$state[[p_ordered_dags$ix[i]]]   bn_obj <- toBNLearn(adj)   plot(bn_obj)      p_est <- p_ordered_dags$x[i] |>     exp() |>     round(4)      p_true <- p_summary |>     dplyr::filter(hash_dag == rlang::hash(adj)) |>     dplyr::select(p_true) |>     as.numeric() |>     round(4)      t <- paste('p_est: ', round(p_est, 4),              ', p_true: ', round(p_true, 4), sep = '')   graphics::text(300, 0, t) }"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"causal-inference-given-the-distribution-of-dags-","dir":"Articles","previous_headings":"","what":"Causal inference given the distribution of DAGs.","title":"An Example of using the Causal Inference Assistant (CIA)","text":"can use posterior distribution DAGs estimate number causal estimands interest.","code":""},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"inferring-direct-causes","dir":"Articles","previous_headings":"Causal inference given the distribution of DAGs.","what":"Inferring direct causes","title":"An Example of using the Causal Inference Assistant (CIA)","text":"example, nodes directly affect . corresponds propensity edge occurring posterior sample DAGs. can also represented graphically often referred consensus graph (e.g., Kuipers et al., 2019; Moffa et al., 2023).  always good practice check convergence reported values. can done using convergence effective sample statistics mentioned . case, also highlight reported value Monte Carlo Standard Error (MCSE). estimate MCMC contribution uncertainty around estimated mean. Running MCMC longer reduce value. value reduced standard comfortable reporting. ’re considering edge probabilities, natural target reduce error mean 1% corresponding MCSE < 0.01. Qualitative checks also good idea supplement quantitative checks. plot point represents marginalised edge probability given edge chain 1 (x) compared chain 2 (y). Points lie close x = y line suggest chains converged. referred concordance plot (Suter et al., 2023).  Another way check convergence look cumulative mean chains (Suter et al., 2021). can performed first drawing posterior predictive chain, involves sampling whether edge per sampling iteration. cumulative mean can calculated chain. Eventually two chains cumulative mean stabilise approximately value. Note Suter et al. (2021) show within chain cumulative mean trace, instead show cumulative mean trace per pairwise edge probability multiple chains, check within across chain convergence.","code":"flat_eq_dag_chains <- FlattenChains(eq_dag_chains)  p_edge <- CalculateEdgeProbabilities(flat_eq_dag_chains) knitr::kable(p_edge) qgraph::qgraph(p_edge, theme = 'colorblind') pedge_sample <- SampleEdgeProbabilities(eq_dag_chains) knitr::kable(summary(pedge_sample)[[3]]) p_edge <- CalculateEdgeProbabilities(eq_dag_chains) PlotConcordance(p_edge) pedge_sample <- SampleEdgeProbabilities(eq_dag_chains) PlotCumulativeMeanTrace(pedge_sample, nrow = 3, ncol = 3, dir = 'v')"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"inferring-causes","dir":"Articles","previous_headings":"Causal inference given the distribution of DAGs.","what":"Inferring causes","title":"An Example of using the Causal Inference Assistant (CIA)","text":"edge probability doesn’t correspond probability cause B. , must calculate probability directed path B (.e., ancestor B). , just calculate point estimate ancestor probability node pairs. Convergence effective sample size checks performed values complete analysis.","code":"p_feature <- function(dag) {      dagitty_obj <- dag |>     toBNLearn() |>     dagitty::as.dagitty()      col_names <- colnames(dag)   row_names <- rownames(dag)   p_anc <- matrix(0L, nrow = nrow(dag),                   ncol = ncol(dag),                    dimnames = list(row_names, col_names))   for (effect_node in col_names) {     ancestors <- dagitty::ancestors(dagitty_obj, effect_node, proper = TRUE)     row_indices <- match(ancestors, row_names)     p_anc[row_indices, effect_node] <- 1L   }      return(as.vector(p_anc)) }  flat_eq_dag_chains |>   CalculateFeatureMean(p_feature) |>   matrix(nrow = 3, ncol = 3, dimnames = list(nodes, nodes)) |>   knitr::kable()"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"estimating-interventional-distributions","dir":"Articles","previous_headings":"Causal inference given the distribution of DAGs.","what":"Estimating interventional distributions","title":"An Example of using the Causal Inference Assistant (CIA)","text":", can estimate probability distribution given intervention. Let’s say expectation =yesA = yes given intervene set B=yesB = yes, given , E(=yes|(B=yes),D)≈ΣGE(=yes|(B=yes),G)p(G|D).E(= yes | (B = yes), D) \\approx \\Sigma_{G} E(= yes | (B = yes), G) p(G|D). can done using -calculus (Pearl, 2000) can performed 1) mutilating graph edges BB removed, 2) setting B=yesB=yes, 3) calculating expectation =yesA=yes given interventional network. Note approximation doesn’t pass errors parameters given graph, instead just using expectation E(=yes|(B=yes),G)E(= yes | (B = yes), G). , ’s good practice check convergence chains. Let’s using summary function. estimated value can compared true value 0.5, true value within Mean ±\\pm 2 ×\\times SD 95% time. Let’s also look convergence using cumulative mean trace plots . Eventually two chains cumulative mean stabilise approximately value.","code":"p_AdoB <- function(dag, data) {      grain_obj <- togRain(dag, data = data)   mut_obj <- MutilateGraph(grain_obj, list(B = c(no = 0.0, yes = 1.0)))   p_A <- gRain::querygrain(mut_obj, 'A')$A['yes'] |>     as.numeric()      return(p_A) }  post_AdoB_chains <- SamplePosteriorPredictiveChains(eq_dag_chains, p_AdoB, data = dat) post_AdoB_summ <- summary(post_AdoB_chains) knitr::kable(post_AdoB_summ[[3]]$stats) PlotCumulativeMeanTrace(post_AdoB_chains)"},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"An Example of using the Causal Inference Assistant (CIA)","text":"analysis shows process performing causal inference using cia. first estimated posterior distribution causal structures using partition MCMC estimated causal estimands interest, probability one node cause another mean interventional distribution. also showed check sampling completed reliably, can confidence reporting estimated values.","code":""},{"path":"https://spaceodyssey.github.io/cia/articles/three_node_example.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"An Example of using the Causal Inference Assistant (CIA)","text":"Gelman, ., Carlin, J.B., Stern, H.S., Dunson, D.B., Vehtari, ., & Rubin, D.B. (2013). Bayesian Data Analysis (3rd ed.). Chapman Hall/CRC. https://doi.org/10.1201/b16018 Kruschke, J. K. (2021). Bayesian analysis reporting guidelines. Nature human behaviour, 5(10), 1282-1291. Kuipers, J., & Moffa, G. (2017). Partition MCMC inference acyclic digraphs. Journal American Statistical Association, 112(517), 282-299. Kuipers, J., Moffa, G., Kuipers, E., Freeman, D., & Bebbington, P. (2019). Links psychotic neurotic symptoms general population: analysis longitudinal British National Survey data using Directed Acyclic Graphs. Psychological Medicine, 49(3), 388-395. Moffa, G., Kuipers, J., Kuipers, E., McManus, S., & Bebbington, P. (2023). Sexual abuse psychotic phenomena: directed acyclic graph analysis affective symptoms using English national psychiatric survey data. Psychological medicine, 53(16), 7817-7826. Pearl, J. (2000). Causality: Models, Reasoning, Inference. Cambridge University Press. https://doi.org/10.1093/bjps/52.3.613 Suter, P., Kuipers, J., Moffa, G., & Beerenwinkel, N. (2023). Bayesian Structure Learning Sampling Bayesian Networks R Package BiDAG. Journal Statistical Software, 105(9), 1–31. https://doi.org/10.18637/jss.v105.i09 Vehtari, ., Gelman, ., Simpson, D., Carpenter, B., & Bürkner, P. C. (2021). Rank-normalization, folding, localization: improved R-hat assessing convergence MCMC (discussion). Bayesian analysis, 16(2), 667-718.","code":""},{"path":"https://spaceodyssey.github.io/cia/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mathew Varidel. Author, maintainer.","code":""},{"path":"https://spaceodyssey.github.io/cia/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Varidel M (2024). cia: Causal inference assistant (CIA). R package version 0.3.1, https://spaceodyssey.github.io/cia/.","code":"@Manual{,   title = {cia: Causal inference assistant (CIA)},   author = {Mathew Varidel},   year = {2024},   note = {R package version 0.3.1},   url = {https://spaceodyssey.github.io/cia/}, }"},{"path":"https://spaceodyssey.github.io/cia/index.html","id":"causal-inference-assistant-cia","dir":"","previous_headings":"","what":"Causal inference assistant (CIA)","title":"Causal inference assistant (CIA)","text":"package performing causal structure learning inference assuming causal process follows directed acyclic graph. includes functionality learn structure using partition MCMC along building Bayesian networks performing probabilistic queries (using gRain). bulk package implementation partition Markov Chain Monte Carlo (PMCMC) algorithm R. PMCMC similar BiDAG implementation scoring function defaults using bnlearn allows range scoring assumptions priors pairwise edge probabilities. also exposure sampling procedure , whereby algorithm can return partitions DAGs providing acceptance rates per proposal understand well sampling partition space. provide simple example function documentation.","code":""},{"path":"https://spaceodyssey.github.io/cia/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Causal inference assistant (CIA)","text":"able install directly GitHub using following: devtools::install_github(“SpaceOdyssey/cia”)","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/BNLearnScorer.html","id":null,"dir":"Reference","previous_headings":"","what":"BNLearnScorer — BNLearnScorer","title":"BNLearnScorer — BNLearnScorer","text":"thin wrapper bnlearn::score function.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/BNLearnScorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BNLearnScorer — BNLearnScorer","text":"","code":"BNLearnScorer(node, parents, ...)"},{"path":"https://spaceodyssey.github.io/cia/reference/BNLearnScorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BNLearnScorer — BNLearnScorer","text":"node Name node score. parents parents node. ... ellipsis used pass parameters scorer.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/BNLearnScorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BNLearnScorer — BNLearnScorer","text":"","code":"data <- bnlearn::learning.test BNLearnScorer('A', c('B', 'C'), data = data) #> [1] -4395.422 BNLearnScorer('A', c(), data = data) #> [1] -5501.568 BNLearnScorer('A', vector(), data = data) #> [1] -5501.568 BNLearnScorer('A', NULL, data = data) #> [1] -5501.568 BNLearnScorer('A', c('B', 'C'), data = data, type = \"bde\", iss = 100) #> [1] -4374.008 BNLearnScorer('A', c('B', 'C'), data = data, type = \"bde\", iss = 1) #> [1] -4403.79"},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateAcceptanceRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate acceptance rates. — CalculateAcceptanceRates","title":"Calculate acceptance rates. — CalculateAcceptanceRates","text":"makes assumption proposal saved variable \"proposal_used\" mcmc saved variable 'accept'.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateAcceptanceRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate acceptance rates. — CalculateAcceptanceRates","text":"","code":"CalculateAcceptanceRates(chains, group_by = NULL)"},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateAcceptanceRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate acceptance rates. — CalculateAcceptanceRates","text":"chains MCMC chains. group_by Vector strings c(\"chain\", \"proposal_used\"). Default NULL return acceptance rates marginalised chains proposal used.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateAcceptanceRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate acceptance rates. — CalculateAcceptanceRates","text":"Summary acceptance rates per grouping.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateEdgeProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate pairwise edge probabilities marginalised over the graph structure. — CalculateEdgeProbabilities","title":"Calculate pairwise edge probabilities marginalised over the graph structure. — CalculateEdgeProbabilities","text":"Calculate pairwise edge probabilities. posterior probability edge \\(E\\) given data \\(D\\) given marginalising graph structure \\(g\\) graph space \\(G\\), $$p(E|D) = \\sum_{g \\G} p(E|g)p(g|D).$$","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateEdgeProbabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate pairwise edge probabilities marginalised over the graph structure. — CalculateEdgeProbabilities","text":"","code":"CalculateEdgeProbabilities(x, ...)"},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateEdgeProbabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate pairwise edge probabilities marginalised over the graph structure. — CalculateEdgeProbabilities","text":"x cia_chain(s) collection object states DAGs. ... Extra parameters sent methods. dag collection can choose use estimated p(g|D) two ways can specified using 'method' parameter.method='sampled' MCMC sampled frequency (recommended method) method='score' uses normalised scores.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateEdgeProbabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate pairwise edge probabilities marginalised over the graph structure. — CalculateEdgeProbabilities","text":"p_edge matrix edge probabilities.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateEdgeProbabilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate pairwise edge probabilities marginalised over the graph structure. — CalculateEdgeProbabilities","text":"posterior probability given graph p(g|D) estimated two ways can specified using 'method' parameter.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateFeatureMean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate arithmetic mean for a DAG feature marginalised over DAGs. — CalculateFeatureMean","title":"Calculate arithmetic mean for a DAG feature marginalised over DAGs. — CalculateFeatureMean","text":"Calculate posterior expected value feature (\\(f(g)\\), e.g., existence edge graph \\(g\\)) marginalising graph structure \\(q\\) graph space \\(G\\), thus $$E(f|D) = \\sum_{g \\G} f(g) p(g|D).$$ can useful calculating point estimates quantities interests, probability edge exists probability one node ancestor another.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateFeatureMean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate arithmetic mean for a DAG feature marginalised over DAGs. — CalculateFeatureMean","text":"","code":"CalculateFeatureMean(x, p_feature, ...)"},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateFeatureMean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate arithmetic mean for a DAG feature marginalised over DAGs. — CalculateFeatureMean","text":"x chain(s) collection object. p_feature function takes adjacency matrix collection object returns scalar corresponding \\(f(g)\\). function must form p_feature(dag). ... Extra parameters sent methods. dag collection can choose use estimated p(g|D) two ways can specified using 'method' parameter.method='sampled' MCMC sampled frequency (recommended method) method='score' uses normalised scores.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CalculateFeatureMean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate arithmetic mean for a DAG feature marginalised over DAGs. — CalculateFeatureMean","text":"p_post_feature numeric value representing posterior probability feature.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CollectUniqueObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect unique objects. — CollectUniqueObjects","title":"Collect unique objects. — CollectUniqueObjects","text":"Get unique set states along log score.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CollectUniqueObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect unique objects. — CollectUniqueObjects","text":"","code":"CollectUniqueObjects(x)"},{"path":"https://spaceodyssey.github.io/cia/reference/CollectUniqueObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect unique objects. — CollectUniqueObjects","text":"x cia_chains cia_chain object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CollectUniqueObjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect unique objects. — CollectUniqueObjects","text":"dag_collection: list entries: state: List unique states. log_evidence_state: Numeric value representing evidence calculated states. log_state_score: Vector log scores state. log_sampling_prob: Vector log probability state estimated using MCMC sampling frequency.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CollectUniqueObjects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect unique objects. — CollectUniqueObjects","text":"gets unique set states cia_object referred objects (\\(o\\)). estimates probability state using two methods. log_sampling_prob uses MCMC sampled frequency estimate posterior probability. alternative method estimate posterior probability state uses state score. recorded log_norm_state_score vector. approach estimates log normalisation constant assuming \\(\\tilde{Z}_O = \\Sigma_{s=1}^S p(o_s)p(D | o_s)\\) \\(O = \\{o_1, o_2, o_3, ..., o_S\\}\\) set unique objects chain. assumes captured probable objects, \\(\\tilde{Z}_O\\) approximately equal true evidence \\(Z = \\Sigma_{g \\G} p(g)p(D | g)\\) sum across possible DAGs (\\(G\\)). also makes assumption exponential score proportional posterior probability, $$p(g|D) \\propto p(g)p(D | g) = \\prod_i \\exp(\\text{score}(X_i, \\text{Pa}_g(X_i) | D))$$ \\(\\text{Pa}_g(X_i)\\) parents set node \\(X_i\\) given graph \\(g\\). normalisation constant estimated estimate log probability object , $$\\log(p(o | D)) = \\log(p(o)p(D|o)) - \\log(\\tilde{Z}_o).$$ Preliminary analysis suggests sampling frequency approach consistent across chains estimating marginalised edge probabilities, therefore preferred method. However, work needs done .","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CreateScorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Scorer constructor. — CreateScorer","title":"Scorer constructor. — CreateScorer","text":"Scorer constructor.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CreateScorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scorer constructor. — CreateScorer","text":"","code":"CreateScorer(   scorer = BNLearnScorer,   ...,   max_parents = Inf,   blacklist = NULL,   whitelist = NULL,   cache = FALSE,   nthreads = 1 )"},{"path":"https://spaceodyssey.github.io/cia/reference/CreateScorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scorer constructor. — CreateScorer","text":"scorer scorer function takes (node, parents) parameters. Default BNLearnScorer. ... Parameters pass scorer. max_parents maximum number allowed parents. Default infinite. blacklist boolean matrix (parent, child) pairs TRUE represents edges DAG. Default NULL represents blacklisting. whitelist boolean matrix (parent, child) pairs TRUE represents edges must DAG. Default NULL represents whitelisting. cache boolean indicate whether build cache. cache works problems scorer varies function (node, parents). Default FALSE. nthreads Number threads used construct cache.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/CreateScorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scorer constructor. — CreateScorer","text":"","code":"scorer <- CreateScorer(data = bnlearn::asia)"},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoCPDAG.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DAG to CPDAG. — DAGtoCPDAG","title":"Convert DAG to CPDAG. — DAGtoCPDAG","text":"Convert DAG CPDAG.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoCPDAG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert DAG to CPDAG. — DAGtoCPDAG","text":"","code":"DAGtoCPDAG(x)"},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoCPDAG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DAG to CPDAG. — DAGtoCPDAG","text":"x matrix, cia_chain, cia_chains object. chain(s) object state must adjacency matrix.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoCPDAG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DAG to CPDAG. — DAGtoCPDAG","text":"x Returns object type converted CPDAG.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoPartition.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DAG to partition. — DAGtoPartition","title":"Convert DAG to partition. — DAGtoPartition","text":"converts DAG partition iteratively constructing sets outpoints. explained section 4.1 Kuipers & Moffa (2017).","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoPartition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert DAG to partition. — DAGtoPartition","text":"","code":"DAGtoPartition(dag)"},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoPartition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DAG to partition. — DAGtoPartition","text":"dag directed acyclic graph represented adjacency matrix, igraph, bnlearn object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoPartition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DAG to partition. — DAGtoPartition","text":"Labelled partition given adjacency matrix.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoPartition.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert DAG to partition. — DAGtoPartition","text":"Kuipers, J., & Moffa, G. (2017). Partition MCMC inference acyclic digraphs. Journal American Statistical Association, 112(517), 282-299.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DAGtoPartition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert DAG to partition. — DAGtoPartition","text":"","code":"dag <- UniformlySampleDAG(LETTERS[1:3]) #> Loading required namespace: igraph partitioned_nodes <- DAGtoPartition(dag)"},{"path":"https://spaceodyssey.github.io/cia/reference/DefaultProposal.html","id":null,"dir":"Reference","previous_headings":"","what":"Default proposal constructor. — DefaultProposal","title":"Default proposal constructor. — DefaultProposal","text":"Default proposal constructor.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/DefaultProposal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default proposal constructor. — DefaultProposal","text":"","code":"DefaultProposal(p = c(0.33, 0.33, 0.165, 0.165, 0.01), verbose = TRUE)"},{"path":"https://spaceodyssey.github.io/cia/reference/DefaultProposal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default proposal constructor. — DefaultProposal","text":"p Probability proposal order (split_join, node_move, swap_node, swap_adjacent, stay_still). verbose Boolean flag record proposal used.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/FlattenChains.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten list of chains. — FlattenChains","title":"Flatten list of chains. — FlattenChains","text":"Flatten list chains.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/FlattenChains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten list of chains. — FlattenChains","text":"","code":"FlattenChains(chains)"},{"path":"https://spaceodyssey.github.io/cia/reference/FlattenChains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten list of chains. — FlattenChains","text":"chains MCMC chains.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetEmptyDAG.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an empty DAG given a set of nodes. — GetEmptyDAG","title":"Get an empty DAG given a set of nodes. — GetEmptyDAG","text":"Get empty DAG given set nodes.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetEmptyDAG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an empty DAG given a set of nodes. — GetEmptyDAG","text":"","code":"GetEmptyDAG(nodes)"},{"path":"https://spaceodyssey.github.io/cia/reference/GetEmptyDAG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an empty DAG given a set of nodes. — GetEmptyDAG","text":"nodes vector node names.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetEmptyDAG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an empty DAG given a set of nodes. — GetEmptyDAG","text":"adjacency matrix elements designated (parent, child).","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetEmptyDAG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an empty DAG given a set of nodes. — GetEmptyDAG","text":"","code":"GetEmptyDAG(LETTERS[1:3]) #>   A B C #> A 0 0 0 #> B 0 0 0 #> C 0 0 0"},{"path":"https://spaceodyssey.github.io/cia/reference/GetIncrementalScoringEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the score of the empty DAG — GetIncrementalScoringEdges","title":"Get the score of the empty DAG — GetIncrementalScoringEdges","text":"Get score empty DAG","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetIncrementalScoringEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the score of the empty DAG — GetIncrementalScoringEdges","text":"","code":"GetIncrementalScoringEdges(scorer, cutoff = 0)"},{"path":"https://spaceodyssey.github.io/cia/reference/GetIncrementalScoringEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the score of the empty DAG — GetIncrementalScoringEdges","text":"scorer scorer object. cutoff score cutoff.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetIncrementalScoringEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the score of the empty DAG — GetIncrementalScoringEdges","text":"Boolean matrix (parent, child) pairs blacklisting..","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetLowestPairwiseScoringEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessing for blacklisting. Get the lowest pairwise scoring edges. — GetLowestPairwiseScoringEdges","title":"Preprocessing for blacklisting. Get the lowest pairwise scoring edges. — GetLowestPairwiseScoringEdges","text":"Get lowest c pairwise scoring edges represented blacklist matrix. blacklisting procedure motivated Koller & Friedman (2003). rarely used now found blacklists edges significant dependencies top \\(n\\) edges. prefer GetIncrementalScoringEdges method.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetLowestPairwiseScoringEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessing for blacklisting. Get the lowest pairwise scoring edges. — GetLowestPairwiseScoringEdges","text":"","code":"GetLowestPairwiseScoringEdges(scorer, n_retain)"},{"path":"https://spaceodyssey.github.io/cia/reference/GetLowestPairwiseScoringEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocessing for blacklisting. Get the lowest pairwise scoring edges. — GetLowestPairwiseScoringEdges","text":"scorer scorer object. n_retain integer representing number edges retain.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetLowestPairwiseScoringEdges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocessing for blacklisting. Get the lowest pairwise scoring edges. — GetLowestPairwiseScoringEdges","text":"boolean matrix (parent, child) pairs blacklisting.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetLowestPairwiseScoringEdges.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Preprocessing for blacklisting. Get the lowest pairwise scoring edges. — GetLowestPairwiseScoringEdges","text":"Koller D, Friedman N. Bayesian network structure. Bayesian approach structure discovery Bayesian networks. Mach Learn. 2003;50(1):95–125.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetMAP.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the maximum a posteriori state. — GetMAP","title":"Get the maximum a posteriori state. — GetMAP","text":"Get maximum posteriori state.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetMAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the maximum a posteriori state. — GetMAP","text":"","code":"GetMAP(x)"},{"path":"https://spaceodyssey.github.io/cia/reference/GetMAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the maximum a posteriori state. — GetMAP","text":"x collection unique objects chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetMAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the maximum a posteriori state. — GetMAP","text":"maps list adjacency matrix map posterior probability. possible return multiple DAGs. list elements; state: List MAP DAGs. log_p: Numeric vector log posterior probability state.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetPartiallyIncrementalEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get partially incremental scoring edges. — GetPartiallyIncrementalEdges","title":"Get partially incremental scoring edges. — GetPartiallyIncrementalEdges","text":"Get positive incremental scoring edges conditioning variables.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/GetPartiallyIncrementalEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get partially incremental scoring edges. — GetPartiallyIncrementalEdges","text":"","code":"GetPartiallyIncrementalEdges(scorer, cutoff = 0)"},{"path":"https://spaceodyssey.github.io/cia/reference/GetPartiallyIncrementalEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get partially incremental scoring edges. — GetPartiallyIncrementalEdges","text":"scorer scorer object. cutoff cutoff value blacklist. Less value blacklisted.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/MutilateGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutilate graph in accordance with an intervention. — MutilateGraph","title":"Mutilate graph in accordance with an intervention. — MutilateGraph","text":"Mutilate graph accordance intervention.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/MutilateGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutilate graph in accordance with an intervention. — MutilateGraph","text":"","code":"MutilateGraph(grain_object, intervention)"},{"path":"https://spaceodyssey.github.io/cia/reference/MutilateGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutilate graph in accordance with an intervention. — MutilateGraph","text":"grain_object grain object. intervention list nodes corresponding intervention distribution represented vector unconditional probabilities.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/MutilateGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutilate graph in accordance with an intervention. — MutilateGraph","text":"grain object. Please note evidence set within grain object passed new object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/MutilateGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutilate graph in accordance with an intervention. — MutilateGraph","text":"","code":"# This creates a mutilated graph in accordance with turning the sprinkler  # on in the wet grass example (i.e, do(S = 'yes')). yn <- c(\"yes\", \"no\") p.R <- gRain::cptable(~R, values=c(.2, .8), levels=yn) p.S_R <- gRain::cptable(~S:R, values=c(.01, .99, .4, .6), levels=yn) p.G_SR <- gRain::cptable(~G:S:R, values=c(.99, .01, .8, .2, .9, .1, 0, 1), levels=yn) wet.cpt <- gRain::grain(gRain::compileCPT(p.R, p.S_R, p.G_SR))  mut_graph <- MutilateGraph(wet.cpt, list(S = c(1.0, 0.0)))  # You can then use querygrain to perform an intervention query. For example, # p(G | do(S = 'yes')) is given by, gRain::querygrain(mut_graph, 'G') #> $G #> G #>   yes    no  #> 0.918 0.082  #>   # You can also perform an observational query for a node not affected # by the intervention. For example, p(R | do(S = 'yes')) is given by, gRain::querygrain(mut_graph, 'R') #> $R #> R #> yes  no  #> 0.2 0.8  #>"},{"path":"https://spaceodyssey.github.io/cia/reference/PartitionMCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition objects. One step implementation of the tempered partition MCMC. — PartitionMCMC","title":"Transition objects. One step implementation of the tempered partition MCMC. — PartitionMCMC","text":"constructor single Tempered Partition MCMC step. function constructs environment proposal, inverse temperature, verbose flag. returns function takes current_state scorer object. allows scores raised constant temperature every step.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PartitionMCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition objects. One step implementation of the tempered partition MCMC. — PartitionMCMC","text":"","code":"PartitionMCMC(   proposal = DefaultProposal(),   temperature = 1,   prerejection = TRUE,   verbose = TRUE )"},{"path":"https://spaceodyssey.github.io/cia/reference/PartitionMCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition objects. One step implementation of the tempered partition MCMC. — PartitionMCMC","text":"proposal Proposal function. Default DefaultProposal. temperature Numeric value representing temperature raise score . Default 1. prerejection Boolean flag reject due proposal disobeying black white lists. set FALSE want understand often proposing states disobey black white lists. Can useful debugging understanding efficiency specific proposal distributions. verbose Flag pass MCMC information.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PartitionMCMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transition objects. One step implementation of the tempered partition MCMC. — PartitionMCMC","text":"Function takes current state scorer outputs new state.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PartitionMCMC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition objects. One step implementation of the tempered partition MCMC. — PartitionMCMC","text":"","code":"dag <- UniformlySampleDAG(c('A', 'B', 'C', 'D', 'E', 'F')) partitioned_nodes <- DAGtoPartition(dag)  scorer <- list(   scorer = BNLearnScorer,   parameters = list(data = bnlearn::learning.test)   )  current_state <- list(   state = partitioned_nodes,   log_score = ScoreLabelledPartition(partitioned_nodes, scorer)   )  pmcmc <- PartitionMCMC(proposal = DefaultProposal(), temperature = 1.0) pmcmc(current_state, scorer) #> $state #>   partition node #> 1         1    B #> 2         1    F #> 3         2    C #> 4         3    A #> 5         4    D #> 6         5    E #>  #> $log_score #> [1] -24153.71 #>  #> $proposal_info #> $proposal_info$proposal_used #> [1] \"node_move\" #>  #>  #> $mcmc_info #> $mcmc_info$accept #> [1] FALSE #>  #> $mcmc_info$white_obeyed #> [1] TRUE #>  #> $mcmc_info$black_obeyed #> [1] TRUE #>  #> $mcmc_info$jac #> [1] 0.1743534 #>  #> $mcmc_info$mhr #> [1] -1073.417 #>  #>"},{"path":"https://spaceodyssey.github.io/cia/reference/PartitiontoDAG.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample DAGs from labelled partitions. — PartitiontoDAG","title":"Sample DAGs from labelled partitions. — PartitiontoDAG","text":"Sample DAGs labelled partitions.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PartitiontoDAG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample DAGs from labelled partitions. — PartitiontoDAG","text":"","code":"PartitiontoDAG(partitions, scorer)"},{"path":"https://spaceodyssey.github.io/cia/reference/PartitiontoDAG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample DAGs from labelled partitions. — PartitiontoDAG","text":"partitions cia_chains, cia_chain, adjacency matrix. scorer scorer object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PlotConcordance.html","id":null,"dir":"Reference","previous_headings":"","what":"Concordance plot. — PlotConcordance","title":"Concordance plot. — PlotConcordance","text":"Concordance plot.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PlotConcordance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concordance plot. — PlotConcordance","text":"","code":"PlotConcordance(x, ...)"},{"path":"https://spaceodyssey.github.io/cia/reference/PlotConcordance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concordance plot. — PlotConcordance","text":"x list adjacency matrices representing edge probabilities, chains object, collections object states DAGs. ... Additional parameter send appropriate method. includes 'highlight' (defauled 0.3) sets cutoff difference used highlight points, probability edge estimation 'method' cia_collections object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PlotConcordance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concordance plot. — PlotConcordance","text":"","code":"data <- bnlearn::learning.test dag <- UniformlySampleDAG(colnames(data)) partitioned_nodes <- DAGtoPartition(dag) scorer <- CreateScorer(scorer = BNLearnScorer, data = data)  results <- SampleChains(300, partitioned_nodes, PartitionMCMC(), scorer, n_parallel_chains = 2) dags <- PartitiontoDAG(results, scorer)  p_edge <- CalculateEdgeProbabilities(dags) PlotConcordance(p_edge)"},{"path":"https://spaceodyssey.github.io/cia/reference/PlotCumulativeMeanTrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cumulative mean trace plot. — PlotCumulativeMeanTrace","title":"Plot cumulative mean trace plot. — PlotCumulativeMeanTrace","text":"Plot cumulative mean trace plot.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PlotCumulativeMeanTrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cumulative mean trace plot. — PlotCumulativeMeanTrace","text":"","code":"PlotCumulativeMeanTrace(   x,   ncol = NULL,   nrow = NULL,   scales = \"fixed\",   dir = \"v\" )"},{"path":"https://spaceodyssey.github.io/cia/reference/PlotCumulativeMeanTrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cumulative mean trace plot. — PlotCumulativeMeanTrace","text":"x posterior predictive sample object. ncol Number columns. nrow Number rows. scales Whether scales fixed ('fixed', default), free ('free') free one dimension ('free_x', 'free_y')? dir Direction fill facets. Either 'h' horizontal 'v' vertical.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PlotScoreTrace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the score trace. — PlotScoreTrace","title":"Plot the score trace. — PlotScoreTrace","text":"Plot score trace.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PlotScoreTrace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the score trace. — PlotScoreTrace","text":"","code":"PlotScoreTrace(   chains,   attribute = \"log_score\",   n_burnin = 0,   same_plot = TRUE,   col = NULL,   ... )"},{"path":"https://spaceodyssey.github.io/cia/reference/PlotScoreTrace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the score trace. — PlotScoreTrace","text":"chains MCMC chains. attribute Name attribute plot. Default \"log_score\". n_burnin Number steps remove burnin. same_plot Whether plot figure multiple figures. col string representing color single chain vector strings cycle multiple chains. ... Extra parameters pass plot graphics::line functions.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PostProcessChains.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of chains. Equilibrium states. — PostProcessChains","title":"Analysis of chains. Equilibrium states. — PostProcessChains","text":"allows remove burnin thin chains processing.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/PostProcessChains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of chains. Equilibrium states. — PostProcessChains","text":"","code":"PostProcessChains(chains, n_burnin = 0, n_thin = 1)"},{"path":"https://spaceodyssey.github.io/cia/reference/PostProcessChains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of chains. Equilibrium states. — PostProcessChains","text":"chains MCMC chains. n_burnin Number steps remove start burnin. Default 0. n_thin Number steps retained states. Default 1.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SampleChains.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample multiple chains in parallel. — SampleChains","title":"Sample multiple chains in parallel. — SampleChains","text":"Sample multiple chains parallel.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SampleChains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample multiple chains in parallel. — SampleChains","text":"","code":"SampleChains(   n_results,   init_state,   transition,   scorer,   n_thin = 1,   n_parallel_chains = 2 )"},{"path":"https://spaceodyssey.github.io/cia/reference/SampleChains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample multiple chains in parallel. — SampleChains","text":"n_results Number saved states per chain. init_state initial state can passed transition. can single state list states parallel chain. transition transition function. scorer scorer object. n_thin Number steps saved states. n_parallel_chains Number chains run parallel. Default 2.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SampleChains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample multiple chains in parallel. — SampleChains","text":"chains cia_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SampleChains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample multiple chains in parallel. — SampleChains","text":"","code":"data <- bnlearn::learning.test  dag <- UniformlySampleDAG(colnames(data)) partitioned_nodes <- DAGtoPartition(dag)  scorer <- list(   scorer = BNLearnScorer,    parameters = list(data = data)   )  results <- SampleChains(10, partitioned_nodes, PartitionMCMC(), scorer)"},{"path":"https://spaceodyssey.github.io/cia/reference/SampleEdgeProbabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample edge probabilities using chains object. — SampleEdgeProbabilities","title":"Sample edge probabilities using chains object. — SampleEdgeProbabilities","text":"Sample edge probabilities using chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SampleEdgeProbabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample edge probabilities using chains object. — SampleEdgeProbabilities","text":"","code":"SampleEdgeProbabilities(x)"},{"path":"https://spaceodyssey.github.io/cia/reference/SampleEdgeProbabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample edge probabilities using chains object. — SampleEdgeProbabilities","text":"x chain(s) collection object states DAGs.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SampleEdgeProbabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample edge probabilities using chains object. — SampleEdgeProbabilities","text":"p_edge posterior sample marginalised edge probabilities.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SamplePosteriorPredictiveChains.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw from a posterior predictive distribution. — SamplePosteriorPredictiveChains","title":"Draw from a posterior predictive distribution. — SamplePosteriorPredictiveChains","text":"Simulate samples posterior predictive distribution feature \\(f\\) graph \\(G\\), given $$p(f|D) = \\sum_{G \\\\mathcal{G}} p(f|G) p(G|D)$$.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SamplePosteriorPredictiveChains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw from a posterior predictive distribution. — SamplePosteriorPredictiveChains","text":"","code":"SamplePosteriorPredictiveChains(x, p_predict, ...)"},{"path":"https://spaceodyssey.github.io/cia/reference/SamplePosteriorPredictiveChains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw from a posterior predictive distribution. — SamplePosteriorPredictiveChains","text":"x cia_chain(s) object. p_predict function draws posterior predictive distribution interest given adjacency matrix representing DAG. function must form p_predict(dag, ...) return either vector numeric values. ... Parameters passed p_predict.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/SamplePosteriorPredictiveChains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw from a posterior predictive distribution. — SamplePosteriorPredictiveChains","text":"cia_post_chain(s) object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreDAG.html","id":null,"dir":"Reference","previous_headings":"","what":"Score DAG. — ScoreDAG","title":"Score DAG. — ScoreDAG","text":"Score DAG.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreDAG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score DAG. — ScoreDAG","text":"","code":"ScoreDAG(dag, scorer)"},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreDAG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score DAG. — ScoreDAG","text":"dag Adjacency matrix (parent, child) entries 1 denoting edge 0 otherwise. scorer Scorer object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreDAG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score DAG. — ScoreDAG","text":"Log DAG score.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreLabelledPartition.html","id":null,"dir":"Reference","previous_headings":"","what":"Score labelled partition by adding the log scores for each node. — ScoreLabelledPartition","title":"Score labelled partition by adding the log scores for each node. — ScoreLabelledPartition","text":"Score labelled partition adding log scores node.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreLabelledPartition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score labelled partition by adding the log scores for each node. — ScoreLabelledPartition","text":"","code":"ScoreLabelledPartition(partitioned_nodes, scorer)"},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreLabelledPartition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score labelled partition by adding the log scores for each node. — ScoreLabelledPartition","text":"partitioned_nodes Labelled partition. scorer Scorer object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreLabelledPartition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score labelled partition by adding the log scores for each node. — ScoreLabelledPartition","text":"Log node score.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/ScoreLabelledPartition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score labelled partition by adding the log scores for each node. — ScoreLabelledPartition","text":"","code":"data <- bnlearn::learning.test  dag <- UniformlySampleDAG(names(data)) partitioned_nodes <- DAGtoPartition(dag)  scorer <- list(   scorer = BNLearnScorer,    parameters = list(data = data)   )  ScoreLabelledPartition(partitioned_nodes, scorer) #> [1] -24411.77"},{"path":"https://spaceodyssey.github.io/cia/reference/UniformlySampleDAG.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniformly sample DAG given a set of nodes. — UniformlySampleDAG","title":"Uniformly sample DAG given a set of nodes. — UniformlySampleDAG","text":"Uniformly sample DAG given set nodes.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/UniformlySampleDAG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniformly sample DAG given a set of nodes. — UniformlySampleDAG","text":"","code":"UniformlySampleDAG(nodes)"},{"path":"https://spaceodyssey.github.io/cia/reference/UniformlySampleDAG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniformly sample DAG given a set of nodes. — UniformlySampleDAG","text":"nodes vector node names.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/UniformlySampleDAG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniformly sample DAG given a set of nodes. — UniformlySampleDAG","text":"Adjacency matrix elements designated (parent, child).","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/UniformlySampleDAG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniformly sample DAG given a set of nodes. — UniformlySampleDAG","text":"","code":"UniformlySampleDAG(LETTERS[1:3]) #>   A B C #> A 0 0 0 #> B 0 0 1 #> C 1 0 0"},{"path":"https://spaceodyssey.github.io/cia/reference/cia-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cia: Causal inference assistant (CIA) — cia-package","title":"cia: Causal inference assistant (CIA) — cia-package","text":"library performing causal inference within structural causal modelling framework. Structure learning performed using partition MCMC (Kuipers & Moffa, 2017) several additional functions added help causal inference.","code":""},{"path":[]},{"path":"https://spaceodyssey.github.io/cia/reference/cia-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cia: Causal inference assistant (CIA) — cia-package","text":"Maintainer: Mathew Varidel mathew.varidel@sydney.edu.au (ORCID)","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Indexing with respect to iterations. — [.cia_chain","title":"Indexing with respect to iterations. — [.cia_chain","text":"Indexing respect iterations.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indexing with respect to iterations. — [.cia_chain","text":"","code":"# S3 method for class 'cia_chain' list()[i, ...]"},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indexing with respect to iterations. — [.cia_chain","text":"x cia_chain object. index. ... ellipsis extra indexing parameters.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indexing with respect to iterations. — [.cia_chain","text":"chain cia_chain.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a cia_chains object with respect to iterations. — [.cia_chains","title":"Index a cia_chains object with respect to iterations. — [.cia_chains","text":"Index cia_chains object respect iterations.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a cia_chains object with respect to iterations. — [.cia_chains","text":"","code":"# S3 method for class 'cia_chains' list()[i, ...]"},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a cia_chains object with respect to iterations. — [.cia_chains","text":"x cia_chain object. index get cia_chain iterations. ... ellipsis extra indexing parameters.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index a cia_chains object with respect to iterations. — [.cia_chains","text":"chain cia_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Indexing with respect to iterations. — [.cia_post_chain","title":"Indexing with respect to iterations. — [.cia_post_chain","text":"Indexing respect iterations.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indexing with respect to iterations. — [.cia_post_chain","text":"","code":"# S3 method for class 'cia_post_chain' list()[i, ...]"},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indexing with respect to iterations. — [.cia_post_chain","text":"x cia_post_chain object. index. ... ellipsis extra indexing parameters.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indexing with respect to iterations. — [.cia_post_chain","text":"chain cia_post_chain.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a cia_post_chains object with respect to iterations. — [.cia_post_chains","title":"Index a cia_post_chains object with respect to iterations. — [.cia_post_chains","text":"Index cia_post_chains object respect iterations.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a cia_post_chains object with respect to iterations. — [.cia_post_chains","text":"","code":"# S3 method for class 'cia_post_chains' list()[i, ...]"},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a cia_post_chains object with respect to iterations. — [.cia_post_chains","text":"x cia_post_chain object. index get cia_post_chain iterations. ... ellipsis extra indexing parameters.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-.cia_post_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index a cia_post_chains object with respect to iterations. — [.cia_post_chains","text":"chain cia_post_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a cia_chains object. — [[.cia_chains","title":"Index a cia_chains object. — [[.cia_chains","text":"Index cia_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a cia_chains object. — [[.cia_chains","text":"","code":"# S3 method for class 'cia_chains' x[[i, ...]]"},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a cia_chains object. — [[.cia_chains","text":"x cia_chains object. index get cia_chain. ... ellipsis extra indexing parameters.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index a cia_chains object. — [[.cia_chains","text":"chain cia_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_post_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Index a cia_post_chains object. — [[.cia_post_chains","title":"Index a cia_post_chains object. — [[.cia_post_chains","text":"Index cia_post_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_post_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index a cia_post_chains object. — [[.cia_post_chains","text":"","code":"# S3 method for class 'cia_post_chains' x[[i, ...]]"},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_post_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index a cia_post_chains object. — [[.cia_post_chains","text":"x cia_post_chains object. index get cia_post_chain. ... ellipsis extra indexing parameters.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/sub-sub-.cia_post_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index a cia_post_chains object. — [[.cia_post_chains","text":"chain cia_post_chains object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toBNLearn.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to bnlearn object. — toBNLearn","title":"Convert to bnlearn object. — toBNLearn","text":"Convert bnlearn object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toBNLearn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to bnlearn object. — toBNLearn","text":"","code":"toBNLearn(x)"},{"path":"https://spaceodyssey.github.io/cia/reference/toBNLearn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to bnlearn object. — toBNLearn","text":"x object represents DAG.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toBNLearn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to bnlearn object. — toBNLearn","text":"bn_obj bn object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toBNLearn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to bnlearn object. — toBNLearn","text":"","code":"adj <- UniformlySampleDAG(c('A', 'B', 'C')) bn_obj <- toBNLearn(adj)"},{"path":"https://spaceodyssey.github.io/cia/reference/toMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a DAG object from other libraries to an adjacency matrix. — toMatrix","title":"Convert a DAG object from other libraries to an adjacency matrix. — toMatrix","text":"Convert DAG object libraries adjacency matrix.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a DAG object from other libraries to an adjacency matrix. — toMatrix","text":"","code":"toMatrix(network)"},{"path":"https://spaceodyssey.github.io/cia/reference/toMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a DAG object from other libraries to an adjacency matrix. — toMatrix","text":"network network object bnlearn igraph.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a DAG object from other libraries to an adjacency matrix. — toMatrix","text":"adjacency matrix representation network.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/toMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a DAG object from other libraries to an adjacency matrix. — toMatrix","text":"","code":"toMatrix(bnlearn::empty.graph(LETTERS[1:6])) #>   A B C D E F #> A 0 0 0 0 0 0 #> B 0 0 0 0 0 0 #> C 0 0 0 0 0 0 #> D 0 0 0 0 0 0 #> E 0 0 0 0 0 0 #> F 0 0 0 0 0 0 toMatrix(igraph::sample_k_regular(10, 2)) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    0    0    0    0    1    0    0    1    0     0 #>  [2,]    0    0    0    0    1    0    1    0    0     0 #>  [3,]    0    0    0    0    0    0    0    1    0     1 #>  [4,]    0    0    0    0    0    0    1    0    1     0 #>  [5,]    1    1    0    0    0    0    0    0    0     0 #>  [6,]    0    0    0    0    0    0    0    0    1     1 #>  [7,]    0    1    0    1    0    0    0    0    0     0 #>  [8,]    1    0    1    0    0    0    0    0    0     0 #>  [9,]    0    0    0    1    0    1    0    0    0     0 #> [10,]    0    0    1    0    0    1    0    0    0     0"},{"path":"https://spaceodyssey.github.io/cia/reference/togRain.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an adjacency matrix or igraph object to a gRain object. — togRain","title":"Convert an adjacency matrix or igraph object to a gRain object. — togRain","text":"Convert adjacency matrix igraph object gRain object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/togRain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an adjacency matrix or igraph object to a gRain object. — togRain","text":"","code":"togRain(x, ...)"},{"path":"https://spaceodyssey.github.io/cia/reference/togRain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an adjacency matrix or igraph object to a gRain object. — togRain","text":"x adjacency matrix igraph object ... extra parameters gRain compile","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/togRain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an adjacency matrix or igraph object to a gRain object. — togRain","text":"gRain_obj gRain object.","code":""},{"path":"https://spaceodyssey.github.io/cia/reference/togRain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an adjacency matrix or igraph object to a gRain object. — togRain","text":"","code":"dag <- bnlearn::model2network(\"[A][C][F][B|A][D|A:C][E|B:F]\") gRain_obj <- togRain(x = dag |> toMatrix(), data = bnlearn::learning.test)"}]
